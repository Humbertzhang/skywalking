# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This file is used to show how to write configuration files and can be used to test.

setup:
  env: kind
  file: kind.yaml
  steps:
    - command: |
        # kind k8s cluster is in $TMPDIR
        cp $TMPDIR/e2e-k8s.config ~/.kube/config

        # Install Istio
        istioctl version || (curl -L https://istio.io/downloadIstio | sh - && sudo mv $PWD/istio-$ISTIO_VERSION/bin/istioctl /usr/local/bin/)
        istioctl install -y  \
          --set profile=demo \
          --set meshConfig.defaultConfig.envoyMetricsService.address=skywalking-oap.istio-system:11800 \
          --set values.telemetry.v2.enabled=false # disable the metadata-exchange extension intentionally to make sure metrics service doesn't rely on it
        kubectl label namespace default istio-injection=enabled
    - command: |
        # load docker image into kind cluster
        kind load docker-image skywalking/oap:latest
        # export TAG
        export TAG=latest
    - command: |
        # Install SkyWalking
        git clone https://github.com/apache/skywalking-kubernetes.git
        cd skywalking-kubernetes
        git reset --hard dd749f25913830c47a97430618cefc4167612e75
        cd chart
        helm dep up skywalking
        helm -n istio-system install skywalking skywalking \
             --set fullnameOverride=skywalking \
             --set elasticsearch.replicas=1 \
             --set elasticsearch.minimumMasterNodes=1 \
             --set elasticsearch.imageTag=7.5.1 \
             --set oap.replicas=1 \
             --set ui.image.repository=skywalking/ui \
             --set ui.image.tag=$TAG \
             --set oap.image.tag=$TAG \
             --set oap.image.repository=skywalking/oap \
             --set oap.storageType=elasticsearch7
        kubectl -n istio-system get pods
        sleep 3
      wait:
        - namespace: istio-system
          resource: deployments/skywalking-oap
          for: condition=available
    - path: bookinfo.yaml,bookinfo-gateway.yaml
      wait:
        - namespace: default
          resource: pod
          for: condition=Ready
    - command: |
        # get the port of ingress gateway
        export GATEWAY_HOST=$(kubectl -n istio-system get pod -l istio=ingressgateway  -o 'jsonpath={.items[0].status.hostIP}')
        export GATEWAY_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="http2")].nodePort}')
    - command: |
        # TODO:
        # set up swctl
        # 12800 port should be opened by KIND
        swctl --base-url http://0.0.0.0:12800/graphql
  timeout: 3600

trigger:
  action: http
  interval: 3s
  times: 5
  url: http://${GATEWAY_HOST}:${GATEWAY_PORT}/productpage
  method: GET

verify:
  - query: swctl --display yaml service ls
    expected:  ../e2e/e2e-test/src/test/resources/expected/metricsservice/services.yml
